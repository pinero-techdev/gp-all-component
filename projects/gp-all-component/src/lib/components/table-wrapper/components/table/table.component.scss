@import 'global/variables';
@import 'global/mixins';

@import './scss/variables.scss';
@import './scss/layout-resets.scss';
@import './scss/color-resets.scss';
@import './scss/border-resets.scss';

::ng-deep {
  .empty-message {
    font-style: italic;
  }

  /* customisation */
  html {
    body {
      .ui-table {
        /* Heads */
        .ui-table-thead {
          > tr {
            > th {
              color: $tableTextColor;
              font-weight: normal;
              text-align: left;
              border-color: $tableBorderColor;
              border-top-width: 0;
              position: relative;

              &.ui-sortable-column {
                position: relative;
                padding-right: 30px;
                text-align: left;

                &.ui-state-highlight,
                &:hover {
                  background: white;
                  color: inherit;

                  i {
                    color: inherit;
                  }
                }

                i {
                  position: absolute;
                  right: $tablePaddingRatio;
                  top: $tablePaddingRatio;
                  color: $tableHeadColor;
                }
              }

              input.ng-star-inserted {
                font-size: 12px;
                border-width: 0 0 1px 0;
                border-color: $tableBorderColor;
                border-style: solid;
                line-height: #{$tablePaddingRatio * 3};
                padding: 0 $tablePaddingRatio;
                width: 100%;
                transition: 0.25s ease-in-out border;

                &:focus,
                &:hover {
                  border-color: $tableActiveColor;
                }
              }
            }
          }

          > tr + tr {
            th {
              border-top-width: 0;
            }
          }
        }

        /* Rows - even that those are cell styles those are depending of the row parity */
        .ui-table-tbody > tr {
          td {
            background-color: white;
          }

          &:nth-child(even) {
            td {
              background-color: $tableNeutralColor;
            }
          }
        }

        /* Cells */
        .ui-table-tbody > tr > td {
          text-transform: uppercase;
          border-color: $tableBorderColor;
          line-height: 40px;

          button.ng-star-inserted {
            cursor: pointer;
            color: white;
            background: $tableActiveColor;
            border-width: 0;
            border-radius: $tableBorderRadius;
            padding: $tablePaddingRatio #{$tablePaddingRatio * 4};
          }

          button.ng-star-inserted ~ button.ng-star-inserted {
            margin-left: $tablePaddingRatio;
          }
        }

        /* Pagination */
        .ui-paginator {
          margin: 25px auto;

          .ui-paginator-first,
          .ui-paginator-last {
            border: 1px solid $tableBorderColor;
          }

          .ui-paginator-first {
            border-radius: $tableBorderRadius 0 0 $tableBorderRadius;
            border-right: none;
          }

          .ui-paginator-last {
            border-radius: 0px $tableBorderRadius $tableBorderRadius 0;
          }

          .ui-paginator-element {
            border-top: 1px solid $tableBorderColor;
            border-bottom: 1px solid $tableBorderColor;
            border-left: 1px solid $tableBorderColor;
            color: $tableTextColor;

            &:not(.ui-state-active):hover {
              background: lighten($tableActiveColor, 40%);
              border-color: lighten($tableActiveColor, 40%);
            }
          }

          .ui-paginator-pages {
            .ui-paginator-page.ui-state-active {
              background: $tableActiveColor;
              border-color: $tableActiveColor;
            }
          }

          .ui-paginator-icon {
            color: currentColor;
            color: inherit;
          }

          /* Bottom paginator */
          &.ui-paginator-bottom {
            text-align: right;
          }

          /* Top paginator */
          &.ui-paginator-top {
            text-align: left;
          }
        }

        .ui-paginator-icon,
        .ui-dropdown .ui-dropdown-trigger {
          .ui-dropdown-trigger-icon {
            color: $tableTextColor;
          }
        }

        /* dropwdown */
        .ui-dropdown {
          color: $tableTextColor;
          border: 1px solid $tableBorderColor;
          border-radius: $tableBorderRadius;
          margin-left: #{$tablePaddingRatio * 3};

          &:hover {
            border-color: $tableBorderColor;
            background: lighten($tableActiveColor, 40%);
          }

          .ui-dropdown-trigger,
          .ui-inputtext {
            background: transparent;
          }

          label.ui-dropdown-label {
            line-height: 1.2;
            height: 100%;
            padding-right: #{$tablePaddingRatio * 4};
          }
        }

        /* Others */
        .ui-chkbox {
          .ui-chkbox-box {
            &.ui-state-active {
              background: $tableActiveColor;

              &,
              &:hover {
                border-color: $tableActiveColor;
              }
            }

            .ui-chkbox-icon {
              width: 100%;
              height: 100%;
            }
          }
        }
      }
    }
  }
}
